<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aorun.ymgh.dao.WorkerCardApplyMapper">
  <resultMap id="BaseResultMap" type="com.aorun.ymgh.model.WorkerCardApply">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="worker_id" jdbcType="BIGINT" property="workerId" />
    <result column="worker_card_id" jdbcType="BIGINT" property="workerCardId" />
    <result column="apply_name" jdbcType="VARCHAR" property="applyName" />
    <result column="telephone" jdbcType="VARCHAR" property="telephone" />
    <result column="company_name" jdbcType="VARCHAR" property="companyName" />
    <result column="id_card_number" jdbcType="VARCHAR" property="idCardNumber" />
    <result column="worker_name" jdbcType="VARCHAR" property="workerName" />
    <result column="id_card_urls" jdbcType="VARCHAR" property="idCardUrls" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="is_readed" jdbcType="INTEGER" property="isReaded" />
    <result column="fail_reason" jdbcType="VARCHAR" property="failReason" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, worker_id, worker_card_id, apply_name, telephone, company_name, id_card_number, 
    worker_name, id_card_urls, status, is_readed, fail_reason, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
  select
  <include refid="Base_Column_List" />
  from t_worker_card_apply
  where id = #{id,jdbcType=BIGINT}
</select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_worker_card_apply
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.aorun.ymgh.model.WorkerCardApply">
    insert into t_worker_card_apply (id, worker_id, worker_card_id, 
      apply_name, telephone, company_name, 
      id_card_number, worker_name, id_card_urls, 
      status, is_readed, fail_reason, create_time,
      update_time)
    values (#{id,jdbcType=BIGINT}, #{workerId,jdbcType=BIGINT}, #{workerCardId,jdbcType=BIGINT}, 
      #{applyName,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR}, #{companyName,jdbcType=VARCHAR}, 
      #{idCardNumber,jdbcType=VARCHAR}, #{workerName,jdbcType=VARCHAR}, #{idCardUrls,jdbcType=VARCHAR}, 
      1, 1, #{failReason,jdbcType=VARCHAR}, now(),now())
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.aorun.ymgh.model.WorkerCardApply">
    update t_worker_card_apply
    <set>
      <if test="workerId != null">
        worker_id = #{workerId,jdbcType=BIGINT},
      </if>
      <if test="workerCardId != null">
        worker_card_id = #{workerCardId,jdbcType=BIGINT},
      </if>
      <if test="applyName != null">
        apply_name = #{applyName,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null">
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="idCardNumber != null">
        id_card_number = #{idCardNumber,jdbcType=VARCHAR},
      </if>
      <if test="workerName != null">
        worker_name = #{workerName,jdbcType=VARCHAR},
      </if>
      <if test="idCardUrls != null">
        id_card_urls = #{idCardUrls,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="failReason != null">
        fail_reason = #{failReason,jdbcType=VARCHAR},
      </if>
      <if test="isReaded != null">
        is_readed = #{isReaded,jdbcType=INTEGER},
      </if>
    </set>
    ,update_time = now()
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aorun.ymgh.model.WorkerCardApply">
    update t_worker_card_apply
    set worker_id = #{workerId,jdbcType=BIGINT},
      worker_card_id = #{workerCardId,jdbcType=BIGINT},
      apply_name = #{applyName,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      company_name = #{companyName,jdbcType=VARCHAR},
      id_card_number = #{idCardNumber,jdbcType=VARCHAR},
      worker_name = #{workerName,jdbcType=VARCHAR},
      id_card_urls = #{idCardUrls,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      is_readed = #{isReaded,jdbcType=INTEGER},
      fail_reason = #{failReason,jdbcType=VARCHAR},
      update_time = now()
    where id = #{id,jdbcType=BIGINT}
  </update>


  <select id="findWorkerCardApplyByWorkerIdAndCardId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_worker_card_apply
    where worker_id = #{workerId}  and  worker_card_id = #{workerCardId}
    order by create_time desc
  </select>

  <update id="updateIsReadedStatus" parameterType="java.lang.Long">
    update t_worker_card_apply
    set
      is_readed = 1,
      update_time = now()
    where id = #{id,jdbcType=BIGINT}
  </update>


</mapper>